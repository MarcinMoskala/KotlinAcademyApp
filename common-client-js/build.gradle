apply plugin: 'kotlin-platform-js'
apply plugin: 'com.moowork.node'

dependencies {
    expectedBy project(':common-client')
    compile project(':common-js')
    compile Deps.kotlin_stdlib_js
    compile Deps.coroutines_js
    compile Deps.kotlin_serializatoin_js
    testCompile Deps.kotlin_test_js
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions {
        sourceMap = true
        sourceMapEmbedSources = "always"
        moduleKind = 'commonjs'
    }
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    version = Versions.node
    download = true
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha']
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installMocha]) {
    script = file('node_modules/mocha/bin/mocha')
    args = [compileTestKotlin2Js.outputFile]
}

test.dependsOn runMocha

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.kotlin
}

artifacts {
    archives sourcesJar
}

kotlin {
    experimental {
        coroutines "enable"
    }
}